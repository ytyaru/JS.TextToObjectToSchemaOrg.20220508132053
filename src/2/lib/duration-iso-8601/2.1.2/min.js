class Duration{numbers = "\\d+"{var t,n;if(fractionalNumbers="".concat(numbers,"(?:[\\.,]").concat(numbers,")?"),datePattern="(".concat(numbers,"Y)?(").concat(numbers,"M)?(").concat(numbers,"W)?(").concat(numbers,"D)?"),timePattern="T(".concat(fractionalNumbers,"H)?(").concat(fractionalNumbers,"M)?(").concat(fractionalNumbers,"S)?"),iso8601="P(?:".concat(datePattern,"(?:").concat(timePattern,")?)"),objMap=["years","months","weeks","days","hours","minutes","seconds",],defaultDuration=Object.freeze({years:0,months:0,weeks:0,days:0,hours:0,minutes:0,seconds:0}),constructor(),parse(durationString),t=durationString.replace(/,/g,".").match(exports.pattern),!t)throw new RangeError("invalid duration: ".concat(durationString));if(n=t.slice(1),n.filter(function(n){return n!=null}).length===0)throw new RangeError("invalid duration: ".concat(durationString));if(n.filter(function(n){return/\./.test(n||"")}).length>1)throw new RangeError("only the smallest unit can be fractional");return n.reduce(function(n,t,i){return n[objMap[i]]=parseFloat(t||"0")||0,n},{});var i,r,u;var i,r,u}}
